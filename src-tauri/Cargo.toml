[package]
name = "ondrive-sync-anywhere"
version = "0.1.0"
description = "Allows the user to sync files outside the OneDrive folder by creating a shortcut"
authors = ["Bill.IHCha"]
license = "MIT"
repository = "https://github.com/bill-zhanxg/onedrive-sync-anywhere"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.3.0", features = [] }
windows = "0.10.0"

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.3.0", features = [ "dialog-open", "window-close", "window-hide", "window-maximize", "window-minimize", "window-show", "window-start-dragging", "window-unmaximize", "window-unminimize"] }
tauri-plugin-persisted-scope = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-store = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-window-state = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
clap = { version = "4.3.8", features = ["derive"] }
colored = "2"

[dependencies.windows]
version = "0.48"
features = [
    "Win32_Foundation",
    "Win32_System_Console",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
